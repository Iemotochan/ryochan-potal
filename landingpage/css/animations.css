/*
===========================================
基本アニメーション
===========================================
*/

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.8;
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

@keyframes wave {
    0%, 100% {
        transform: scaleY(0.5);
        opacity: 0.5;
    }
    50% {
        transform: scaleY(1.5);
        opacity: 1;
    }
}

@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes loading {
    from {
        width: 0%;
    }
    to {
        width: 100%;
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/*
===========================================
桜とプラチナエフェクトのアニメーション
固定速度版
===========================================
*/

@keyframes sakuraFall {
    0% {
        transform: translateY(-100px) translateX(0) rotate(0deg);
        opacity: 0;
    }
    5% {
        opacity: 0.8;
    }
    25% {
        transform: translateY(25vh) translateX(20px) rotate(90deg);
    }
    50% {
        transform: translateY(50vh) translateX(-10px) rotate(180deg);
    }
    75% {
        transform: translateY(75vh) translateX(30px) rotate(270deg);
    }
    95% {
        opacity: 0.8;
    }
    100% {
        transform: translateY(100vh) translateX(50px) rotate(360deg);
        opacity: 0;
    }
}

@keyframes sparkRise {
    0% {
        transform: translateY(100vh) translateX(0) scale(0.5);
        opacity: 0;
    }
    10% {
        opacity: 0.9;
        transform: translateY(90vh) translateX(10px) scale(1);
    }
    50% {
        opacity: 1;
        transform: translateY(50vh) translateX(-20px) scale(1.2);
    }
    90% {
        opacity: 0.9;
        transform: translateY(10vh) translateX(30px) scale(0.8);
    }
    100% {
        transform: translateY(-50px) translateX(0) scale(0.3);
        opacity: 0;
    }
}

/*
===========================================
文字浮上エフェクト
===========================================
*/

@keyframes textSlideUp {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes textGlow {
    0%, 100% {
        text-shadow: 
            2px 2px 4px rgba(0, 0, 0, 1),
            0 0 10px rgba(64, 224, 208, 0.3);
    }
    50% {
        text-shadow: 
            2px 2px 4px rgba(0, 0, 0, 1),
            0 0 20px rgba(64, 224, 208, 0.6);
    }
}

/*
===========================================
ホバーエフェクト
===========================================
*/

@keyframes cardFloat {
    0%, 100% {
        transform: translateY(0) scale(1);
    }
    50% {
        transform: translateY(-5px) scale(1.01);
    }
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/*
===========================================
プラチナグロー
===========================================
*/

@keyframes platinumGlow {
    0%, 100% {
        opacity: 0.3;
        transform: scale(0.9);
        filter: hue-rotate(0deg);
    }
    50% {
        opacity: 0.6;
        transform: scale(1.1);
        filter: hue-rotate(90deg);
    }
}

/*
===========================================
ボタンエフェクト
===========================================
*/

@keyframes buttonPulse {
    0% {
        box-shadow: 0 0 0 0 rgba(64, 224, 208, 0.7);
    }
    70% {
        box-shadow: 0 0 0 20px rgba(64, 224, 208, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(64, 224, 208, 0);
    }
}

/*
===========================================
アニメーション削減設定
===========================================
*/

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}
